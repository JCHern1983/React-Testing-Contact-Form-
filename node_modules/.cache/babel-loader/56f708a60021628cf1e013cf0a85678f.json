{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\desktop\\\\React-Testing-Contact-Form\\\\src\\\\components\\\\ContactForm.js\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst ContactForm = () => {\n  const [data, setData] = useState();\n  const [numClicks, setNumClicks] = useState(0);\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: \"onBlur\"\n  });\n\n  const onSubmit = data => {\n    setData(data);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"First Name*\"), React.createElement(\"input\", {\n    name: \"firstName\",\n    placeholder: \"bill\",\n    ref: register({\n      required: true,\n      maxLength: 3\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), errors.firstName && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Looks like there was an error: \", errors.firstName.type)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Last Name*\"), React.createElement(\"input\", {\n    name: \"lastName\",\n    placeholder: \"luo\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), errors.lastName && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Looks like there was an error: \", errors.lastName.type)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    placeholder: \"bluebill1049@hotmail.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Email*\"), React.createElement(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Looks like there was an error: \", errors.email.type)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Message\"), React.createElement(\"textarea\", {\n    name: \"message\",\n    ref: register({\n      required: false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), data && React.createElement(\"pre\", {\n    style: {\n      textAlign: \"left\",\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, JSON.stringify(data, null, 2)), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: e => {\n      e.preventDefault();\n      setNumClicks(numClicks + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"click me: \", numClicks));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/Carlos/desktop/React-Testing-Contact-Form/src/components/ContactForm.js"],"names":["React","useState","useForm","ContactForm","data","setData","numClicks","setNumClicks","register","errors","handleSubmit","reset","mode","onSubmit","required","maxLength","firstName","type","lastName","email","textAlign","color","JSON","stringify","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ContactForm = () => {\r\n  const [data, setData] = useState();\r\n  const [numClicks, setNumClicks] = useState(0);\r\n  const { register, errors, handleSubmit, reset } = useForm({\r\n    mode: \"onBlur\"\r\n  });\r\n  const onSubmit = data => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div>\r\n          <label htmlFor=\"firstName\">First Name*</label>\r\n          <input\r\n            name=\"firstName\"\r\n            placeholder=\"bill\"\r\n            ref={register({ required: true, maxLength: 3 })}\r\n          />\r\n          {errors.firstName && (\r\n            <p>Looks like there was an error: {errors.firstName.type}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"lastName\">Last Name*</label>\r\n          <input\r\n            name=\"lastName\"\r\n            placeholder=\"luo\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.lastName && (\r\n            <p>Looks like there was an error: {errors.lastName.type}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"email\" placeholder=\"bluebill1049@hotmail.com\">\r\n            Email*\r\n          </label>\r\n          <input name=\"email\" ref={register({ required: true })} />\r\n          {errors.email && (\r\n            <p>Looks like there was an error: {errors.email.type}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"message\">Message</label>\r\n          <textarea name=\"message\" ref={register({ required: false })} />\r\n        </div>\r\n        {data && (\r\n          <pre style={{ textAlign: \"left\", color: \"white\" }}>\r\n            {JSON.stringify(data, null, 2)}\r\n          </pre>\r\n        )}\r\n        <input type=\"submit\" />\r\n      </form>\r\n      <button onClick={e=>{\r\n        e.preventDefault();\r\n        setNumClicks(numClicks+1);\r\n      }}>click me: {numClicks}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}